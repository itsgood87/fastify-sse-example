{"version":3,"file":"parcel-transformer-liquid.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { Transformer } from '@parcel/plugin';\nimport { Liquid, defaultOptions } from 'liquidjs';\nimport fs from 'fs';\nimport path from 'path';\n\ntype LiquidOptions = Partial<typeof defaultOptions>;\n\nexport default new Transformer({\n  async loadConfig({ config }) {\n    const configFiles = [\n      '.liquidrc',\n      '.liquidrc.js',\n      '.liquidrc.cjs',\n      'liquid.config.js',\n      'liquid.config.cjs',\n    ];\n\n    const { contents, filePath } =\n      (await config.getConfig<LiquidOptions>(configFiles)) || {};\n\n    if (filePath) {\n      if (filePath.endsWith('.js')) {\n        config.invalidateOnStartup();\n      }\n\n      config.invalidateOnFileChange(filePath);\n    }\n\n    return contents;\n  },\n  async transform({ asset, config, options }) {\n    const conf: LiquidOptions = config;\n    const engine = new Liquid(conf);\n    const code = await asset.getCode();\n    const template = await engine.parseAndRender(code);\n\n    if (conf.root?.length > 0) {\n      let deps: string[] = [];\n\n      for (const dir of conf.root) {\n        const files = fs\n          .readdirSync(dir)\n          .map(filePath => path.join(dir, filePath));\n\n        deps = deps.concat(files);\n      }\n\n      for (const dep of deps) {\n        await asset.invalidateOnFileChange(\n          path.resolve(options.projectRoot, dep),\n        );\n      }\n    }\n\n    asset.setCode(template);\n    asset.type = 'html';\n\n    return [asset];\n  },\n});\n"],"names":["Transformer","loadConfig","config","configFiles","getConfig","contents","filePath","endsWith","invalidateOnStartup","invalidateOnFileChange","transform","asset","options","conf","engine","Liquid","getCode","code","parseAndRender","template","root","length","deps","dir","files","fs","readdirSync","map","path","join","concat","dep","resolve","projectRoot","setCode","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,yBAAe,IAAIA,WAAW,CAAC;EACvBC,UAAU;;;;;;YAAGC,MAAM,QAANA,MAAM;YACjBC,WAAW,GAAG,CAClB,WAAW,EACX,cAAc,EACd,eAAe,EACf,kBAAkB,EAClB,mBAAmB,CACpB;YAAA;YAAA,OAGQD,MAAM,CAACE,SAAS,CAAgBD,WAAW,CAAC;UAAA;YAAA;YAAA;cAAA;cAAA;;YAAA,cAAK,EAAE;UAAA;YAAA;YADpDE,QAAQ,SAARA,QAAQ;YAAEC,QAAQ,SAARA,QAAQ;YAG1B,IAAIA,QAAQ,EAAE;cACZ,IAAIA,QAAQ,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBAC5BL,MAAM,CAACM,mBAAmB,EAAE;;cAG9BN,MAAM,CAACO,sBAAsB,CAACH,QAAQ,CAAC;;YACxC,iCAEMD,QAAQ;UAAA;UAAA;YAAA;;;;GAChB;EACKK,SAAS;;;;;;;YAAGC,KAAK,SAALA,KAAK,EAAET,MAAM,SAANA,MAAM,EAAEU,OAAO,SAAPA,OAAO;YAChCC,IAAI,GAAkBX,MAAM;YAC5BY,MAAM,GAAG,IAAIC,MAAM,CAACF,IAAI,CAAC;YAAA;YAAA,OACZF,KAAK,CAACK,OAAO,EAAE;UAAA;YAA5BC,IAAI;YAAA;YAAA,OACaH,MAAM,CAACI,cAAc,CAACD,IAAI,CAAC;UAAA;YAA5CE,QAAQ;YAAA,MAEV,eAAAN,IAAI,CAACO,IAAI,qBAAT,WAAWC,MAAM,IAAG,CAAC;cAAA;cAAA;;YACnBC,IAAI,GAAa,EAAE;YAAA;cAAA;cAAA;gBAAA;kBAAA;oBAEZC,GAAG;oBACNC,KAAK,GAAGC,EAAE,CACbC,WAAW,CAACH,GAAG,CAAC,CAChBI,GAAG,CAAC,UAAArB,QAAQ;sBAAA,OAAIsB,IAAI,CAACC,IAAI,CAACN,GAAG,EAAEjB,QAAQ,CAAC;sBAAC;oBAE5CgB,IAAI,GAAGA,IAAI,CAACQ,MAAM,CAACN,KAAK,CAAC;kBAAC;kBAAA;oBAAA;;;;YAAA,4CALVX,IAAI,CAACO,IAAI;UAAA;YAAA;cAAA;cAAA;;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA,6CAQTE,IAAI;UAAA;YAAA;cAAA;cAAA;;YAAXS,GAAG;YAAA;YAAA,OACNpB,KAAK,CAACF,sBAAsB,CAChCmB,IAAI,CAACI,OAAO,CAACpB,OAAO,CAACqB,WAAW,EAAEF,GAAG,CAAC,CACvC;UAAA;YAAA;YAAA;UAAA;YAILpB,KAAK,CAACuB,OAAO,CAACf,QAAQ,CAAC;YACvBR,KAAK,CAACwB,IAAI,GAAG,MAAM;YAAC,kCAEb,CAACxB,KAAK,CAAC;UAAA;UAAA;YAAA;;;;;CAEjB,CAAC;;;;"}